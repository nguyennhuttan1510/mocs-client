{"version":3,"sources":["components/WrapRoute/index.js","components/RouteWithLayout/index.js","Routes.js","stores/sagas/auth.js","stores/sagas/index.js","stores/store.js","util/History/index.js","components/ErrorBoundary/index.js","components/ScrollToTop/index.js","App.js","reportWebVitals.js","index.js","stores/reducers/user.js","stores/reducers/dashboard.js","stores/reducers/clients/home.js","stores/reducers/management.js","stores/reducers/clients/cart.js","services/httpClient.js","stores/constants.js","services/SocketIO/SocketClient.js","stores/reducers/current.js","api/auth.js"],"names":["WrapRoute","children","propTypes","PropTypes","element","isRequired","RouteWithLayout","props","Layout","layout","Component","component","isHeader","path","name","hasIconHeaderRight","rest","history","useHistory","profile","useSelector","state","user","useEffect","Object","keys","length","push","render","matchProps","titleHeader","defaultProps","Main","lazy","UserLayout","NoLayout","SignIn","Home","Business","Personnel","Profile","Users","DetailFood","ListOrder","Progress","ProfileClient","Routes","location","useLocation","override","css","routes","exact","fallback","pathname","className","loading","color","map","item","key","handleLogin","handleLogout","wrapFlowAccess","auth","payload","console","log","call","Authenticator","login","params","res","status","put","type","authAction","loginSuccess","data","callback","loginFail","Error","logoutSuccess","access","take","CONSTANT","ACTION_TYPE","LOGIN","action","LOGOUT","fork","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","dashboard","management","current","cart","home","middleware","getDefaultMiddleware","concat","run","createBrowserHistory","React","ScrollToTop","window","scrollTo","App","SocketClient","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","createSlice","initialState","reducers","getProfile","actions","isRedirectDetail","table","staffs","listTable","listMenu","setIsDetail","currentTable","filter","e","id","payBill","tables","index","findIndex","splice","addTable","addMenuOfTable","food","menu","removeMenuOfTable","tableAction","categoryMenu","listEvent","getListMenu","getCategory","getEvent","homeAction","managementStaff","managementBestSeller","foodBestSeller","manager","listFood","bill","addToCart","totalPrice","price","totalItem","count","removeFoodFromCart","setCountFood","getBill","getTableClient","cartAction","HttpClient","config","axios","create","baseURL","process","headers","socket","io","transports","dispatch","useDispatch","on","listStaff","setTitleHeader","currentState","httpClient","account","a","result","post","message","getStaff","get","handleResponse"],"mappings":"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","file":"static/js/main.32d557ec.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nconst WrapRoute = ({ children }) => {\n    return <>{children}</>\n}\n\nWrapRoute.propTypes = {\n    children: PropTypes.element.isRequired,\n}\n\nexport default WrapRoute\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, useHistory } from 'react-router-dom'\r\n\r\nconst RouteWithLayout = (props) => {\r\n    const {\r\n        layout: Layout,\r\n        component: Component,\r\n        path,\r\n        isHeader,\r\n        name,\r\n        hasIconHeaderRight,\r\n        ...rest\r\n    } = props\r\n    const history = useHistory()\r\n    const profile = useSelector((state) => state.user.profile)\r\n\r\n    useEffect(() => {\r\n        const isLogin = Object.keys(profile).length === 0\r\n        if (isLogin) {\r\n            history.push('/login')\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [profile])\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(matchProps) => (\r\n                <Layout\r\n                    isHeader={isHeader}\r\n                    titleHeader={name}\r\n                    hasIconHeaderRight={hasIconHeaderRight}\r\n                    {...matchProps}\r\n                >\r\n                    <Component {...matchProps} />\r\n                </Layout>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nRouteWithLayout.defaultProps = {\r\n    hasIconHeaderRight: false,\r\n    isHeader: false,\r\n}\r\n\r\nexport default RouteWithLayout\r\n","import { css } from '@emotion/react'\r\nimport WrapRoute from 'components/WrapRoute'\r\nimport React, { lazy, Suspense } from 'react'\r\nimport { Switch, useLocation } from 'react-router-dom'\r\nimport ScaleLoader from 'react-spinners/ScaleLoader'\r\n// import 'style/_Root.scss'\r\nimport RouteWithLayout from 'components/RouteWithLayout'\r\n\r\nconst Main = lazy(() => import('layouts/Main'))\r\nconst UserLayout = lazy(() => import('layouts/UserLayout'))\r\nconst NoLayout = lazy(() => import('layouts/NoLayout'))\r\nconst SignIn = lazy(() => import('pages/Login'))\r\nconst Home = lazy(() => import('pages/Home'))\r\nconst Business = lazy(() => import('pages/Business'))\r\nconst Personnel = lazy(() => import('pages/Personnel'))\r\nconst Profile = lazy(() => import('pages/Profile'))\r\nconst Users = lazy(() => import('pages/Users'))\r\nconst DetailFood = lazy(() => import('pages/Users/subpages/DetailFood'))\r\nconst ListOrder = lazy(() => import('pages/Users/subpages/ListOrder'))\r\nconst Progress = lazy(() => import('pages/Users/subpages/Progress'))\r\nconst ProfileClient = lazy(() => import('pages/Users/subpages/ProfileClient'))\r\n\r\nconst Routes = () => {\r\n    // CONFIG ROUTE\r\n    const location = useLocation()\r\n    const override = css`\r\n        border-color: #001529;\r\n    `\r\n    const routes = [\r\n        {\r\n            path: '/mocs-client',\r\n            component: Home,\r\n            layout: Main,\r\n            exact: true,\r\n            name: 'Home Page',\r\n            //   route: private,\r\n        },\r\n        {\r\n            path: '/login',\r\n            component: SignIn,\r\n            layout: NoLayout,\r\n            exact: true,\r\n            name: 'Login Page',\r\n        },\r\n        {\r\n            path: '/admin/management-business',\r\n            component: Business,\r\n            layout: Main,\r\n            exact: true,\r\n            name: 'Admin Page',\r\n        },\r\n        {\r\n            path: '/admin/management-staff',\r\n            component: Personnel,\r\n            layout: Main,\r\n            exact: true,\r\n            name: 'Management Staff Page',\r\n        },\r\n        {\r\n            path: '/profile/:id',\r\n            component: Profile,\r\n            layout: Main,\r\n            exact: true,\r\n            name: 'Profile Page',\r\n        },\r\n        {\r\n            path: '/users',\r\n            component: Users,\r\n            layout: UserLayout,\r\n            exact: true,\r\n            name: 'Users Page',\r\n        },\r\n        {\r\n            path: '/users/food-detail/:id',\r\n            component: DetailFood,\r\n            layout: UserLayout,\r\n            exact: true,\r\n            name: 'Detail Food',\r\n            isHeader: true, //show header for UI Mobile\r\n        },\r\n        {\r\n            path: '/users/order',\r\n            component: ListOrder,\r\n            layout: UserLayout,\r\n            exact: true,\r\n            name: 'Your Order',\r\n            isHeader: true, //show header for UI Mobile\r\n        },\r\n        {\r\n            path: '/users/bill',\r\n            component: Progress,\r\n            layout: UserLayout,\r\n            exact: true,\r\n            name: 'Your Bill',\r\n            isHeader: true, //show header for UI Mobile\r\n        },\r\n        {\r\n            path: '/users/profile',\r\n            component: ProfileClient,\r\n            layout: UserLayout,\r\n            exact: true,\r\n            name: 'Profile',\r\n            isHeader: true, //show header for UI Mobile\r\n            hasIconHeaderRight: true, // Show icon logout\r\n        },\r\n        {\r\n            path: '*',\r\n            component: () => (\r\n                <div>\r\n                    <h1>Page not found</h1>\r\n                </div>\r\n            ),\r\n            layout: NoLayout,\r\n            name: 'Page Not Found',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <Suspense\r\n            fallback={\r\n                location.pathname !== '/login' && (\r\n                    <div className='loading'>\r\n                        <ScaleLoader\r\n                            loading={true}\r\n                            css={override}\r\n                            color={'#001529'}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        >\r\n            <Switch>\r\n                {routes.map((item, key) => (\r\n                    <RouteWithLayout\r\n                        key={key}\r\n                        name={item.name}\r\n                        layout={item.layout}\r\n                        component={item.component}\r\n                        exact={item.exact}\r\n                        path={item.path}\r\n                        isHeader={item?.isHeader || false}\r\n                        hasIconHeaderRight={item.hasIconHeaderRight}\r\n                    />\r\n                ))}\r\n            </Switch>\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import { fork, call, put, take } from 'redux-saga/effects'\nimport { authAction } from 'stores/reducers/user'\nimport Authenticator from 'api/auth'\nimport { CONSTANT } from 'stores/constants'\n\nfunction* handleLogin(payload) {\n    console.log('Login')\n    const res = yield call(Authenticator.login, payload.params)\n    if (res.status) {\n        console.log('was accessed')\n        yield put({ type: authAction.loginSuccess().type, payload: res.data })\n        payload.callback(res)\n    } else {\n        console.log(\"wasn't accessed\")\n        yield put({ type: authAction.loginFail().type })\n        throw new Error('')\n    }\n}\n\nfunction* handleLogout() {\n    console.log('Logout')\n    yield put({ type: authAction.logoutSuccess().type })\n}\n\nfunction* wrapFlowAccess() {\n    console.log('saga-auth')\n    while (true) {\n        // ALLOW ACCESS AGAIN WHEN IT FAILED\n        let access = false\n        while (!access) {\n            const action = yield take(CONSTANT.ACTION_TYPE.LOGIN)\n            try {\n                yield call(handleLogin, action.payload)\n                access = true\n            } catch (error) {\n                access = false\n            }\n        }\n\n        //LOGOUT\n        yield take(CONSTANT.ACTION_TYPE.LOGOUT)\n        yield call(handleLogout)\n    }\n}\n\nexport default function* auth() {\n    yield fork(wrapFlowAccess)\n}\n","import { all } from 'redux-saga/effects'\nimport auth from './auth'\nexport default function* rootSaga() {\n    yield all([auth()])\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './sagas'\nimport user from 'stores/reducers/user'\nimport dashboard from './reducers/dashboard'\nimport management from './reducers/management'\nimport current from './reducers/current'\nimport cart from './reducers/clients/cart'\nimport home from './reducers/clients/home'\n\n// Create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = configureStore({\n    reducer: {\n        user: user,\n        dashboard: dashboard,\n        management: management,\n        current: current,\n        cart: cart,\n        home: home,\n    },\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware().concat(sagaMiddleware),\n})\n\n// Then run the saga\nsagaMiddleware.run(rootSaga)\n\n// Render the application\nexport default store\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","import React from 'react'\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { hasError: false }\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true }\n    }\n\n    // componentDidCatch(error, errorInfo) {\n    //   // You can also log the error to an error reporting service\n    //   logErrorToMyService(error, errorInfo);\n    // }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary\n","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation()\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [pathname])\r\n\r\n    return null\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport SocketClient from 'services/SocketIO/SocketClient'\r\nimport Routes from 'Routes'\r\nimport store from 'stores/store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport WrapRoute from 'components/WrapRoute'\r\nimport 'App.scss'\r\nimport 'antd/dist/antd.css'\r\nimport history from 'util/History'\r\nimport ErrorBoundary from 'components/ErrorBoundary'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\nimport ScrollToTop from 'components/ScrollToTop'\r\n\r\nconst App = (props) => {\r\n    return (\r\n        // <ErrorBoundary>\r\n        <Provider store={store}>\r\n            <SocketClient>\r\n                <Router history={history}>\r\n                    <ScrollToTop />\r\n                    <WrapRoute>\r\n                        <Routes />\r\n                    </WrapRoute>\r\n                </Router>\r\n            </SocketClient>\r\n        </Provider>\r\n        // </ErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    profile: {},\n}\n\nconst user = createSlice({\n    name: 'user',\n    initialState: initialState,\n    reducers: {\n        loginSuccess(state, action) {\n            state.profile = action.payload\n        },\n        loginFail(state, action) {\n            state.profile = {}\n        },\n\n        logoutSuccess(state, action) {\n            state.profile = {}\n        },\n\n        getProfile(state, action) {\n            state.profile = action.payload\n        },\n    },\n})\nexport const authAction = user.actions\n\nexport default user.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    isRedirectDetail: false,\n    table: {},\n    data: [],\n    staffs: [],\n    listTable: [],\n    listMenu: {},\n}\n\nconst dashboard = createSlice({\n    name: 'dashboard',\n    initialState: initialState,\n    reducers: {\n        setIsDetail: (state, action) =>\n            void (state.isRedirectDetail = action.payload),\n        table: (state, action) => {\n            const table = action.payload\n            if (table) {\n                const currentTable = state.data.filter((e) => e.id === table.id)\n                if (currentTable.length > 0) {\n                    state.table = currentTable[0]\n                    return\n                } else {\n                    state.table = table\n                    return\n                }\n            }\n            state.table = {}\n        },\n\n        payBill: (state, action) => {\n            const tables = state.data\n            const id = action.payload\n            const index = tables.findIndex((e) => e.id === id)\n            tables.splice(index, 1)\n        },\n\n        addTable: (state, action) => void (state.data = action.payload),\n\n        addMenuOfTable: (state, action) => {\n            const { id, food } = action.payload //id = id table, food = food is list food in table\n            state.data = state.data.map((e) =>\n                e.id === id ? { ...e, menu: food } : e\n            )\n        },\n\n        removeMenuOfTable: (state, action) => {\n            //id = id table, food = food has removed in table\n            const { id, food } = action.payload\n\n            state.data = state.data.map((item) =>\n                item.id === id\n                    ? { ...item, menu: item.menu.filter((e) => e.id !== food.id) }\n                    : item\n            )\n        },\n\n        staffs: (state, action) => void (state.staffs = action.payload),\n\n        listTable: (state, action) => void (state.listTable = action.payload),\n        listMenu: (state, action) => void (state.listMenu = action.payload),\n    },\n})\nexport const tableAction = dashboard.actions\nexport default dashboard.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    listMenu: [],\n    categoryMenu: [],\n    listEvent: [],\n}\n\nconst home = createSlice({\n    name: 'home',\n    initialState: initialState,\n    reducers: {\n        getListMenu: (state, actions) => {\n            state.listMenu = actions.payload\n        },\n        getCategory: (state, actions) => {\n            state.categoryMenu = actions.payload\n        },\n        getEvent: (state, actions) => {\n            state.listEvent = actions.payload\n        },\n    },\n})\nexport const homeAction = home.actions\n\nexport default home.reducer\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst state = {\r\n    managementStaff: [],\r\n    managementBestSeller: [],\r\n}\r\n\r\nconst management = createSlice({\r\n    name: 'management',\r\n    initialState: state,\r\n    reducers: {\r\n        managementStaff: (state, action) =>\r\n            void (state.managementStaff = action.payload),\r\n\r\n        foodBestSeller: (state, action) =>\r\n            void (state.managementBestSeller = action.payload),\r\n    },\r\n})\r\nexport const manager = management.actions\r\n\r\nexport default management.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    listFood: {},\n    bill: {},\n}\n\nconst cart = createSlice({\n    name: 'cart',\n    initialState: initialState,\n    reducers: {\n        addToCart: (state, actions) => {\n            state.listFood = {\n                ...state.listFood,\n                listFood: [...state.listFood.listFood, actions.payload],\n                totalPrice: state.listFood.totalPrice + actions.payload.price,\n                totalItem: state.listFood.totalItem + actions.payload.count,\n            }\n        },\n        removeFoodFromCart: (state, actions) => {\n            state.listFood = state.listFood.filter((e) => e.id !== actions.payload)\n        },\n        setCountFood: (state, actions) => {\n            state.listFood.listFood = state.listFood.listFood.map((e) => {\n                if (e.id === actions.payload.id) {\n                    return {\n                        ...e,\n                        count: actions.payload.count,\n                        price: actions.payload.price,\n                    }\n                }\n                return e\n            })\n        },\n        getBill: (state, actions) => {\n            state.bill = actions.payload\n        },\n        getTableClient: (state, actions) => {\n            state.listFood = actions.payload\n        },\n    },\n})\nexport const cartAction = cart.actions\n\nexport default cart.reducer\n","import axios from 'axios';\n\nconst HttpClient = (config) => {\n  const headerOptions = {\n    'Content-type': 'application/json',\n    'cache-control': 'no-cache',\n  };\n\n  return axios.create({\n    baseURL: process.env.REACT_APP_API_SERVER, // ENV LOCAL IS \"HTTP://\"\n    headers: headerOptions,\n  });\n};\n\nexport default HttpClient;\n","export const CONSTANT = {\n    ACTION_TYPE: {\n        LOGIN: 'USER/LOGIN',\n        LOGOUT: 'USER/LOGOUT',\n    },\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { io } from 'socket.io-client'\nimport { tableAction } from 'stores/reducers/dashboard'\nimport { manager } from 'stores/reducers/management'\nimport { homeAction } from 'stores/reducers/clients/home'\nimport { cartAction } from 'stores/reducers/clients/cart'\nimport { authAction } from 'stores/reducers/user'\n\n//CONNECT SERVER SOCKET IO\nconst ENDPOINT = process.env.REACT_APP_API_SERVER\nexport const socket = io(ENDPOINT, {\n    transports: ['websocket'],\n})\n\n//LISTEN DATA FORM SERVER\nconst SocketClient = ({ children }) => {\n    const dispatch = useDispatch()\n    socket.on('info-user', (data) => {\n        if (!data) return\n        dispatch(authAction.loginSuccess(data))\n    })\n\n    socket.on('data-manage-tables', (listTable) => {\n        dispatch(tableAction.addTable(listTable))\n    })\n\n    socket.on('the-list-table', (data) => {\n        console.log(data)\n        dispatch(tableAction.listTable(data))\n    })\n\n    socket.on('the-list-menu', (data) => {\n        console.log(data)\n        dispatch(tableAction.listMenu(data))\n    })\n\n    // socket.on('notification-message-client', (data) => {\n    //     console.log(data)\n    //     Notify(data.type, data.title, data.description, 'bottomRight')\n    // })\n\n    // socket.on('notification-message-service', (data) => {\n    //     console.log(data)\n    //     Notify(data.type, data.title, data.description)\n    // })\n\n    //================ADMIN==========================\n\n    socket.on('data-staff', (listStaff) => {\n        dispatch(tableAction.staffs(listStaff))\n    })\n\n    socket.on('data-management', (data) => {\n        console.log(data)\n        dispatch(manager.managementStaff(data))\n    })\n\n    socket.on('data-business', (data) => {\n        console.log(data)\n        dispatch(manager.foodBestSeller(data))\n    })\n\n    //========================= CLIENTS ==================\n\n    socket.on('client-information', (data) => {\n        dispatch(authAction.loginSuccess(data))\n    })\n    socket.on('event-for-client', (data) => {\n        dispatch(homeAction.getEvent(data))\n    })\n    socket.on('table-client', (data) => {\n        dispatch(cartAction.getTableClient(data))\n    })\n    socket.on('category-home-client', (data) => {\n        dispatch(homeAction.getCategory(data))\n    })\n    socket.on('the-list-menu', (data) => {\n        dispatch(homeAction.getListMenu(data))\n    })\n    socket.on('bill-client', (data) => {\n        dispatch(cartAction.getBill(data))\n    })\n    return <>{children}</>\n}\n\nSocketClient.propTypes = {\n    children: PropTypes.element.isRequired,\n}\n\nexport default SocketClient\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    titleHeader: '',\n    // IDTable: '',\n}\n\nconst current = createSlice({\n    name: 'current',\n    initialState: initialState,\n    reducers: {\n        setTitleHeader: (state, actions) =>\n            void (state.titleHeader = actions.payload),\n        // setIDTable: (state, actions) => {\n        //     state.IDTable = actions.payload\n        // },\n    },\n})\nexport const currentState = current.actions\n\nexport default current.reducer\n","import HttpClient from 'services/httpClient'\n\nconst httpClient = HttpClient()\n\nconst login = async (account) => {\n    let result = {}\n    try {\n        const res = await httpClient.post('/login', account)\n        if (res.data?.status) {\n            result = {\n                status: true,\n                data: res.data.data,\n                message: 'Login successful',\n            }\n        } else {\n            throw new Error('Login is invalid')\n        }\n    } catch (error) {\n        result = {\n            status: false,\n            message: error.message,\n        }\n    }\n    return result\n}\n\nconst getStaff = async (id) => {\n    let result;\n    try {\n      const httpClient = HttpClient();\n      const handleResponse = await httpClient.get(`/staff/${id}`);\n      result = await handleResponse.data;\n      console.log(result);\n      if (result.status) {\n        result = {\n          status: true,\n          data: result.data,\n        };\n      }\n    } catch (error) {\n      console.log(error);\n      result = {\n        status: false,\n        message: \"Profile not found\",\n      };\n    }\n    return result;\n  };\n\nconst Authenticator = {\n    login,\n    getStaff,\n}\n\nexport default Authenticator\n"],"sourceRoot":""}