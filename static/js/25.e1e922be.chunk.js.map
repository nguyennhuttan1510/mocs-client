{"version":3,"sources":["common/HandleFormat.js","common/HandleConvertURLImage.js","pages/Users/subpages/Progress/index.js"],"names":["HandleShowCharFirstName","string","words","trim","split","length","slice","HandleConvertPoint","currentPoint","objPoint","min","max","colorMin","colorMax","valueBar","Number","constantFormat","Date","date","moment","format","Money","number","Intl","NumberFormat","upCaseFirst","toLowerCase","map","Word","toUpperCase","join","HandleConvertURLImage","url","console","log","process","replaceAll","HandleSessionsOfDay","getHour","getHours","style","width","bgcolor","Progress","props","profile","useSelector","state","user","listFood","cart","container","className","item","xs","sx","component","aria-label","menu","e","px","primary","price","count","justifyContent","total","light","mt","direction","alignItems","marginBottom","total_cost","createdAt","payedAt","name","my","py","backgroundImage","textAlign","marginTop"],"mappings":"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","file":"static/js/25.e1e922be.chunk.js","sourcesContent":["import moment from 'moment'\r\n\r\nconst Date = (date) => {\r\n    if (!date) return\r\n    return moment(date).format('DD-MM-YYYY, h:mm a')\r\n}\r\n\r\nconst Money = (number) => {\r\n    if (!number) return\r\n    return new Intl.NumberFormat().format(number)\r\n}\r\n\r\nconst upCaseFirst = (string) => {\r\n    if (!string) return\r\n    return string\r\n        .trim()\r\n        .toLowerCase()\r\n        .split(' ')\r\n        .map(function (Word) {\r\n            return Word[0].toUpperCase() + Word.slice(1)\r\n        })\r\n        .join(' ')\r\n}\r\n\r\nexport const HandleShowCharFirstName = (string) => {\r\n    if (!string) return\r\n    let result\r\n    let words = string.trim().split(' ')\r\n    result = words[words.length - 1].slice(0, 1) + words[0].slice(0, 1)\r\n    return result\r\n}\r\n\r\nexport const HandleConvertPoint = (currentPoint) => {\r\n    let objPoint = {\r\n        min: 0,\r\n        max: 0,\r\n        colorMin: '',\r\n        colorMax: '',\r\n        valueBar: 0,\r\n    }\r\n    // if (!currentPoint) return objPoint\r\n    if (currentPoint >= 0 && currentPoint < 300) {\r\n        objPoint = {\r\n            min: 0,\r\n            max: 300,\r\n            colorMin: 'gray',\r\n            colorMax: '#ffe112',\r\n        }\r\n    } else if (currentPoint >= 300 && currentPoint < 800) {\r\n        objPoint = {\r\n            min: 300,\r\n            max: 800,\r\n            colorMin: '#ffe112',\r\n            colorMax: '#ff0000',\r\n        }\r\n    } else {\r\n        objPoint = {\r\n            min: 300,\r\n            max: 800,\r\n            colorMin: '#ffe112',\r\n            colorMax: '#ff0000',\r\n        }\r\n    }\r\n    const valueBar = (Number(currentPoint) / (objPoint.max - objPoint.min)) * 100\r\n\r\n    return { ...objPoint, valueBar: valueBar }\r\n}\r\n\r\nexport const constantFormat = {\r\n    Date,\r\n    Money,\r\n    upCaseFirst,\r\n    HandleShowCharFirstName,\r\n}\r\n","export const HandleConvertURLImage = (url) => {\n    console.log(\n        'ðŸš€ ~ file: HandleConvertURLImage.js ~ line 1 ~ HandleConvertURLImage ~ url',\n        typeof url\n    )\n    console.log(\n        'ðŸš€ ~ file: HandleConvertURLImage.js ~ line 2 ~ HandleConvertURLImage ~ url',\n        url\n    )\n    if (!url || typeof url !== 'string') return\n    let result\n    url = url.replaceAll(`\\\\`, `/`)\n    result = process.env.REACT_APP_API_SERVER + url\n    return result\n}\nexport const HandleSessionsOfDay = () => {\n    const currentDate = new Date()\n    const getHour = currentDate.getHours()\n    let session = 'Good Night'\n    if (getHour >= 4 && getHour < 10) {\n        session = 'Good Morning'\n    } else if (getHour >= 10 && getHour < 16) {\n        session = 'Good Afternoon'\n    } else {\n        session = 'Good Night'\n    }\n    return session\n}\n","import React from 'react'\nimport { Grid, List, ListItem, ListItemText, Divider } from '@mui/material'\nimport { useSelector } from 'react-redux'\nimport { constantFormat } from 'common/HandleFormat'\nimport './style.scss'\nimport { HandleSessionsOfDay } from 'common/HandleConvertURLImage'\n\nconst style = {\n    width: '100%',\n    bgcolor: 'background.paper',\n}\nconst Progress = (props) => {\n    const profile = useSelector((state) => state.user.profile)\n    const listFood = useSelector((state) => state.cart.listFood)\n\n    return (\n        <Grid container className='bill-page'>\n            {listFood ? (\n                <>\n                    <Grid item xs={12}>\n                        <List\n                            sx={style}\n                            component='nav'\n                            aria-label='mailbox folders'\n                        >\n                            {listFood?.menu?.map((e) => (\n                                <>\n                                    <ListItem px={0}>\n                                        <Grid item xs={6}>\n                                            <ListItemText primary='Inbox' />\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            <div className='order__price'>\n                                                ${e.price}\n                                            </div>\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            <div className='order__price'>\n                                                x {e.count}\n                                            </div>\n                                        </Grid>\n                                        <Grid\n                                            container\n                                            justifyContent='flex-end'\n                                            xs={2}\n                                        >\n                                            <div className='order__count'>\n                                                ${e.total}\n                                            </div>\n                                        </Grid>\n                                    </ListItem>\n                                    <Divider light />\n                                </>\n                            ))}\n                        </List>\n                    </Grid>\n                    <Grid container xs={12} mt={2}>\n                        <Grid\n                            container\n                            xs={12}\n                            direction='row'\n                            justifyContent='space-between'\n                            alignItems='flex-end'\n                        >\n                            <h4>Total Price</h4>\n                            <h2 style={{ marginBottom: ' 2px' }}>\n                                ${listFood.total_cost}\n                            </h2>\n                        </Grid>\n                        <Grid\n                            container\n                            xs={12}\n                            direction='row'\n                            justifyContent='space-between'\n                        >\n                            <h4>Created at:</h4>\n                            <h4>{constantFormat.Date(listFood.createdAt)}</h4>\n                        </Grid>\n                        <Grid\n                            container\n                            xs={12}\n                            direction='row'\n                            justifyContent='space-between'\n                        >\n                            <h4>Payed at:</h4>\n                            <h4>{constantFormat.Date(listFood?.payedAt)}</h4>\n                        </Grid>\n                        <Grid\n                            container\n                            xs={12}\n                            direction='row'\n                            justifyContent='space-between'\n                        >\n                            <h4>Username:</h4>\n                            <h4>{profile.name}</h4>\n                        </Grid>\n                    </Grid>\n                    <Grid container justifyContent='center' my={8}>\n                        <h3>Thanks you have chosen SUAHAO !</h3>\n                    </Grid>\n                </>\n            ) : (\n                <Grid container justifyContent='center' xs={12} py={4}>\n                    <div\n                        className='bg-pay-bill'\n                        style={{\n                            backgroundImage: `url(${\n                                process.env.PUBLIC_URL\n                            }/assets/images/${\n                                HandleSessionsOfDay() === 'Good Night'\n                                    ? 'bg-paybill.png'\n                                    : 'bg-paybill2.png'\n                            })`,\n                        }}\n                    ></div>\n                    <h2 style={{ textAlign: 'center', marginTop: '16px' }}>\n                        {`Have A ${HandleSessionsOfDay()}`}\n                    </h2>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n\nexport default Progress\n"],"sourceRoot":""}